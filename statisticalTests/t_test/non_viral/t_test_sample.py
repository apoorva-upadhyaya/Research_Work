from scipy import stats
import numpy as np
import pandas as pd
from statsmodels.tsa.stattools import kpss
import statistics
from statsmodels.tsa.stattools import grangercausalitytests
import csv


def welch_ttest(x1,x2,x3,n1,y1,y2,y3,n2): 
    ## Welch-Satterthwaite Degrees of Freedom ##
    dof = (x3/n1 + y3/n2)**2 / ((x3/n1)**2 / (n1-1) + (y3/n2)**2 / (n2-1))
    dof = (((x2)**2)/n1 + ((y2)**2)/n2)**2 / ((((x2)**2)/n1)**2 / (n1-1) + (((y2)**2)/n2)**2 / (n2-1))
    t, p = stats.ttest_ind_from_stats(x1,x2,n1,y1,y2,n2,equal_var = False)
    
    print("\n",
          f"Welch's t-test= {t}", "\n",
          f"p-value = {p}", "\n",
          f"Welch-Satterthwaite Degrees of Freedom= {dof:.4f}")

    return t,p,dof

# N1=[8, 9, 10, 13, 15, 18, 21, 23, 25, 26, 31, 35]
N1=[9, 14, 19, 22, 27, 30, 33, 35, 40, 47, 55, 60]
Communal_viral=[[0.16911559649156843, 0.10867500982953085, 0.011810257761448626], [0.2290579173615016, 0.1334509481177091, 0.01780915555351549], [0.1963457917006025, 0.08855812614276996, 0.007842541705918757], [0.23349682460758334, 0.06728901333798758, 0.004527811315999871], [0.24505446222546112, 0.0760293177047048, 0.0057804571506429375], [0.2668355808733887, 0.10384025788733187, 0.010782799158107589], [0.20804727243002835, 0.07555594853744003, 0.005708701359392287], [0.2655597287488239, 0.1449809045925937, 0.021019462696486756], [0.2104239836132102, 0.05468042397757203, 0.002989948766367034], [0.24691008992184366, 0.15325462428236075, 0.023486979863927556], [0.20527573189428644, 0.08502233890269349, 0.007228798112484468], [0.22525679819293512, 0.0843133308846019, 0.007108737764856364]]
X=Communal_viral

N2 = [12, 14, 16, 22, 25, 30, 33, 37, 41, 45, 48, 52]

Communal_non=  [[0.27579183134439969, 0.0658976128997785, 0.027522100380588735], [0.33210467820141368, 0.07293746427756695, 0.005319873695241354], [0.3180773067057816, 0.1022193308981389, 0.010448791609263213], [0.3070232344034541, 0.10274781928730312, 0.010557114368296297], [0.259075981565172, 0.08418622700946843, 0.007087320818089751], [0.2615773853367409, 0.10083344041668772, 0.010167382706265712], [0.256609452469532, 0.15098367996119286, 0.02279607161462391], [0.28782025905637226, 0.08682200893749029, 0.0075380612359416425], [0.26548018702724535, 0.07148304488121958, 0.005109825705490453], [0.3005872145396642, 0.10393209723882668, 0.010801880836460925], [0.3165309589016273, 0.09647977258129987, 0.009308346517339344], [0.30386569093146487, 0.05443475172216829, 0.0029631421950541033]]
Y=Communal_non


j=0
final=[]
for i in range(len(X)):
	x1,x2,x3=X[i][0],X[i][1],X[i][2]
	n1=N1[i]
	y1,y2=Y[i][0],Y[i][1]
	n2=N2[i]
	j=j+5
	print("Minutes ::::",j)
	t,p,dof=welch_ttest(x1,x2,x3,n1,y1,y2,0,n2)
	y=[]
	y.append("No of Nodes")
	y.append("Communal_non")
	y.append(j)
	y.append(t)
	y.append(p)
	y.append(dof)
	final.append(y)


myfile = open('T_Test.csv','w')
wrtr = csv.writer(myfile, delimiter=',', quotechar='"')
for row in final:
    wrtr.writerow(row)
    myfile.flush() # whenever you want, and/or
myfile.close()